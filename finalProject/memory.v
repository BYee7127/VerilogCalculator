//////////////////////////////////////////////////////////////////////////////////
// Module Name:		memory
// Description: 	Basic memory model to store previous output or input
//
// Dependencies: 	
//
// Comments: 		This file could potentially be auto-generated by Quartus.
//                  There are templates it can generate.
//
//////////////////////////////////////////////////////////////////////////////////
module Memory
#(parameter DATA_WIDTH=16, parameter ADDR_WIDTH= 16)
(
	input [(DATA_WIDTH-1):0] data_a,
	input [(ADDR_WIDTH-1):0] addr_a,
	input we_a, clk,
	output reg [(DATA_WIDTH-1):0] q_a
);
 
	// Declare the RAM variable
	reg [DATA_WIDTH-1:0] ram[2**ADDR_WIDTH-1:0]; 
	
	initial begin
	$readmemb("memoryTest.txt", ram);
	end
	
	// Port A 
	always @ (posedge clk)
	begin
		if (we_a) 
		begin
			ram[addr_a] <= data_a;
			q_a <= data_a;
		end
		else 
		begin
			q_a <= ram[addr_a];
		end
	end

	// Port B 
	//always @ (posedge clk)
	//begin
		//if(addr_a != addr_b)
		//begin
			//if (we_b) 
			//begin
				//ram[addr_b] <= data_b;
				//q_b <= data_b;
			//end
			//else 
			//begin
				//q_b <= ram[addr_b];
			//end
		//end
		//else
		//begin		
			//if (we_b && ~we_a) 
			//begin
				//ram[addr_b] <= data_b;
				//q_b <= data_b;
			//end
			//else 
			//begin
				//q_b <= ram[addr_b];
			//end
		//end
//	end
	
endmodule
